//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace CallNadraPensiorBridge.CallNadraPensiorDMZ {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CallNadraPensiorSoap", Namespace="http://tempuri.org/")]
    public partial class CallNadraPensior : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback dibVerifyFingerPrintsOperationCompleted;
        
        private System.Threading.SendOrPostCallback dibGetLastVerificationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CallNadraPensior() {
            this.Url = global::CallNadraPensiorBridge.Properties.Settings.Default.CallNadraPensiorBridge_CallNadraPensiorDMZ_CallNadraPensior;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event dibVerifyFingerPrintsCompletedEventHandler dibVerifyFingerPrintsCompleted;
        
        /// <remarks/>
        public event dibGetLastVerificationCompletedEventHandler dibGetLastVerificationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dibVerifyFingerPrints", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string dibVerifyFingerPrints(string SESSION_ID, string CITIZEN_NUMBER, string CONTACT_NUMBER, string FINGER_INDEX, string FINGER_TEMPLATE, string AREA_NAME) {
            object[] results = this.Invoke("dibVerifyFingerPrints", new object[] {
                        SESSION_ID,
                        CITIZEN_NUMBER,
                        CONTACT_NUMBER,
                        FINGER_INDEX,
                        FINGER_TEMPLATE,
                        AREA_NAME});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dibVerifyFingerPrintsAsync(string SESSION_ID, string CITIZEN_NUMBER, string CONTACT_NUMBER, string FINGER_INDEX, string FINGER_TEMPLATE, string AREA_NAME) {
            this.dibVerifyFingerPrintsAsync(SESSION_ID, CITIZEN_NUMBER, CONTACT_NUMBER, FINGER_INDEX, FINGER_TEMPLATE, AREA_NAME, null);
        }
        
        /// <remarks/>
        public void dibVerifyFingerPrintsAsync(string SESSION_ID, string CITIZEN_NUMBER, string CONTACT_NUMBER, string FINGER_INDEX, string FINGER_TEMPLATE, string AREA_NAME, object userState) {
            if ((this.dibVerifyFingerPrintsOperationCompleted == null)) {
                this.dibVerifyFingerPrintsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndibVerifyFingerPrintsOperationCompleted);
            }
            this.InvokeAsync("dibVerifyFingerPrints", new object[] {
                        SESSION_ID,
                        CITIZEN_NUMBER,
                        CONTACT_NUMBER,
                        FINGER_INDEX,
                        FINGER_TEMPLATE,
                        AREA_NAME}, this.dibVerifyFingerPrintsOperationCompleted, userState);
        }
        
        private void OndibVerifyFingerPrintsOperationCompleted(object arg) {
            if ((this.dibVerifyFingerPrintsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dibVerifyFingerPrintsCompleted(this, new dibVerifyFingerPrintsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/dibGetLastVerification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string dibGetLastVerification(string CITIZEN_NUMBER) {
            object[] results = this.Invoke("dibGetLastVerification", new object[] {
                        CITIZEN_NUMBER});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dibGetLastVerificationAsync(string CITIZEN_NUMBER) {
            this.dibGetLastVerificationAsync(CITIZEN_NUMBER, null);
        }
        
        /// <remarks/>
        public void dibGetLastVerificationAsync(string CITIZEN_NUMBER, object userState) {
            if ((this.dibGetLastVerificationOperationCompleted == null)) {
                this.dibGetLastVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OndibGetLastVerificationOperationCompleted);
            }
            this.InvokeAsync("dibGetLastVerification", new object[] {
                        CITIZEN_NUMBER}, this.dibGetLastVerificationOperationCompleted, userState);
        }
        
        private void OndibGetLastVerificationOperationCompleted(object arg) {
            if ((this.dibGetLastVerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dibGetLastVerificationCompleted(this, new dibGetLastVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dibVerifyFingerPrintsCompletedEventHandler(object sender, dibVerifyFingerPrintsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dibVerifyFingerPrintsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dibVerifyFingerPrintsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void dibGetLastVerificationCompletedEventHandler(object sender, dibGetLastVerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dibGetLastVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dibGetLastVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591